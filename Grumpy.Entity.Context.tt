<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System.Collections" #>
<#@ output extension=".cs" #>
<#@ include file="EF6.Utility.CS.ttinclude"#><#
var projectDir = Host.ResolveAssemblyReference("$(ProjectDir)");
var modelFile = Directory.EnumerateFiles(projectDir).SingleOrDefault(f => f.EndsWith(".edmx"));
var modelAssembly = Path.GetFileNameWithoutExtension(Host.ResolveAssemblyReference("$(TargetPath)"));
var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var loader = new EdmMetadataLoader(textTransform.Host, textTransform.Errors);

if (modelFile == null) 
    return "// Text Template supports one and only one .edmx (EF Model) per project."; 

var modelName = Path.GetFileNameWithoutExtension(modelFile);
var itemCollection = loader.CreateEdmItemCollection(modelFile);

var container = itemCollection.OfType<EntityContainer>().FirstOrDefault();
if (container == null)
    return "// Entity Container not found"; 

var codeNamespace = code.VsNamespaceSuggestion();
#>
using Grumpy.Entity.Interfaces;
<#
if (!string.IsNullOrEmpty(codeNamespace))
{
#>
namespace <#=code.EscapeNamespace(codeNamespace)#>
{
<#
    PushIndent("    ");
}
#>
public partial class <#=container.Name#>
{
    public <#=container.Name#>(IEntityConnectionConfig entityConnectionConfig) : base(entityConnectionConfig.ConnectionString("<#=modelAssembly#>", "<#=modelName#>"))
    {
#pragma warning disable S1481
        // NOTE: Using type from EntityFramework.SqlServer to ensure copy of dll to all application using this dll
        // ReSharper disable once UnusedVariable
        var instance = System.Data.Entity.SqlServer.SqlProviderServices.Instance;
#pragma warning restore S1481
    }
}
<#
if (!String.IsNullOrEmpty(codeNamespace))
{
    PopIndent();
#>
}<#
}
#>
<#+
public static void ArgumentNotNull<T>(T arg, string name) where T : class
{
    if (arg == null)
    {
        throw new ArgumentNullException(name);
    }
}
#>